using System.Collections;
using System.Collections.Generic;
using System.IO;
using UnityEngine;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using Newtonsoft.Json.Serialization;





/*
 * ------------------------------------------------------------------------

                            SearchTags


                                DATA


 * ------------------------------------------------------------------------
 */

public partial class SearchTags : MonoBehaviour
{

    public void OneTimeInit()
    {
        /*
        _searchTagData = new SearchTagData();


        _searchTagData.SearchTagDataSet = "set";
        _searchTagData.version = "0.0.1";
        _searchTagData.SearchTagList = new List<SearchTagRecord>();

        //fill in categories

        //------------------MAIN-------------------
        SearchTagRecord record = CreateRecord("Main", 0);
        _searchTagData.SearchTagList.Add(record);


        SearchTagRecord subRecord = CreateRecord("Pizza", 1);
        record.SearchTagList.Add(subRecord);

        subRecord = CreateRecord("Veggies", 1);
        record.SearchTagList.Add(subRecord);

        subRecord = CreateRecord("Chicken", 1);
        record.SearchTagList.Add(subRecord);

        subRecord = CreateRecord("Pancakes", 1);
        record.SearchTagList.Add(subRecord);



        //-----------------------------------------


        //----------------APPETIZER----------------
        record = CreateRecord("Appetizer", 0);
        _searchTagData.SearchTagList.Add(record);

        subRecord = CreateRecord("Bread", 1);
        record.SearchTagList.Add(subRecord);


        //-----------------------------------------

        //DESERT
        record = CreateRecord("Desert", 0);
        _searchTagData.SearchTagList.Add(record);

        subRecord = CreateRecord("Dounut", 1);
        record.SearchTagList.Add(subRecord);

        subRecord = CreateRecord("Icecream", 1);
        record.SearchTagList.Add(subRecord);

        subRecord = CreateRecord("Cookie", 1);
        record.SearchTagList.Add(subRecord);

        //COLD DRINKS
        record = CreateRecord("ColdDrinks", 0);
        _searchTagData.SearchTagList.Add(record);

        subRecord = CreateRecord("Beer", 1);
        record.SearchTagList.Add(subRecord);

        subRecord = CreateRecord("Wine", 1);
        record.SearchTagList.Add(subRecord);

        subRecord = CreateRecord("Mix", 1);
        record.SearchTagList.Add(subRecord);

        //HOT DRINKS
        record = CreateRecord("HotDrinks", 0);
        _searchTagData.SearchTagList.Add(record);

        subRecord = CreateRecord("Tea", 1);
        record.SearchTagList.Add(subRecord);

        //PLATES
        record = CreateRecord("Plates", 0);
        _searchTagData.SearchTagList.Add(record);

        subRecord = CreateRecord("Dinner", 1);
        record.SearchTagList.Add(subRecord);

        //PLACEMATS
        record = CreateRecord("PlaceMats", 0);
        _searchTagData.SearchTagList.Add(record);

        subRecord = CreateRecord("Carbon", 1);
        record.SearchTagList.Add(subRecord);

        //CUTLERY
        record = CreateRecord("Cutlery", 0);
        _searchTagData.SearchTagList.Add(record);

        subRecord = CreateRecord("Knife", 1);
        record.SearchTagList.Add(subRecord);

        subRecord = CreateRecord("Fork", 1);
        record.SearchTagList.Add(subRecord);

        subRecord = CreateRecord("Spoon", 1);
        record.SearchTagList.Add(subRecord);

        //CENTER PIECES
        record = CreateRecord("CenterPieces", 0);
        _searchTagData.SearchTagList.Add(record);

        subRecord = CreateRecord("Vase", 1);
        record.SearchTagList.Add(subRecord);

        subRecord = CreateRecord("Candle", 1);
        record.SearchTagList.Add(subRecord);


        SaveJsonData();
        */
    }







    public void WriteTagsToScriptEnums()
    {
        string path = "Assets/Scripts/SearchTagEnums.cs";
        StreamWriter writer = new StreamWriter(path, false);

        writer.WriteLine("/* This is file is generated by MCAssetTool.  Do not edit */");
        writer.WriteLine("using UnityEngine;");
        writer.WriteLine("using System.Collections;");
        writer.WriteLine("using System.Collections.Generic;");
        writer.WriteLine(" ");

        writer.WriteLine("[System.Serializable]");

        writer.WriteLine("public class mcSearchTags");
        writer.WriteLine("{");

        //writer.WriteLine("\tpublic int tagID;");
        writer.WriteLine("\tpublic enum eSearchTags");

        writer.WriteLine("\t{");


        //loop
        foreach (SearchTagRecord sr in _searchTagData.SearchTagList)
        {
            writer.WriteLine("\t\t" + sr.TagName + "_" + sr.column + " = " + sr.id.ToString() + ",");

            if (sr.SearchTagList.Count > 0)
            {
                foreach (SearchTagRecord sr1 in sr.SearchTagList)
                {
                    writer.WriteLine("\t\t\t" + sr1.TagName + "_" + sr1.column + " = " + sr1.id.ToString() + ",");

                    if (sr1.SearchTagList.Count > 0)
                    {
                        foreach (SearchTagRecord sr2 in sr1.SearchTagList)
                        {
                            writer.WriteLine("\t\t\t\t" + sr2.TagName + "_" + sr2.column + " = " + sr2.id.ToString() + ",");

                            if (sr2.SearchTagList.Count > 0)
                            {
                                foreach (SearchTagRecord sr3 in sr2.SearchTagList)
                                {
                                    writer.WriteLine("\t\t\t\t\t" + sr3.TagName + "_" + sr3.column +  " = " + sr3.id.ToString() + ",");
                                }
                            }
                        }
                    }
                }
            }
        }

        writer.WriteLine("\t}");
        writer.WriteLine(" ");
        writer.WriteLine("\tpublic eSearchTags eTag = eSearchTags.Main_0;");
        writer.WriteLine("}");

        writer.Close();
    }



}
